// =========================== 变量与属性名区别 ===========================
// var name = 10;
// var obj = {
//     name : '珠峰',
//     [12] : 1000
// }
// 获取obj这个对象的name属性对应的值
// console.log(obj.name);      // '珠峰'
// 一个对象的属性名只有两种格式: 数字或者字符串（等基本类型）
// 只有被单引号或双引号，才叫做字符串
// console.log(obj['name']);   // '珠峰'
/*
    'age'   值 -> 代表本身
    age     变量 -> 代表它存储的这个值 
*/ 

// obj[name变量代表的值] => obj[10] => undefined
// console.log(obj[name]);     // console.log(name); <=> obj[name];
/*
function fn () {
    var aa = 10;

    return aa;  // 把aa的值返回  =>  return 100;
}
*/



// 图片演示 ./image/值和变量的区别.png
// var name = '珠峰培训'
// var obj = {
//     // name : '珠峰培训'
//     // 属性名 : 属性值（放的是变量也是把变量存储的值拿过来做属性值）
//     // name : name,
//     name,   // => ES6 的简化 和 name: name 一模一样
//     // 三元运算符，计算出来结果，然后得到那个值放到属性值里
//     age : 1===1 ? 100 : 200     
// }
// console.log(obj['name']);


/**
 *  变量与属性名区别
 *      属性名: 它是对象里独有的，属性名就是一个值，属性名只有两种格式: 数字或者字符串
 *      变量: 变量不是值，变量就是一个名字，用来存值
 */ 





// ========================= for in循环 ===========================
// for in循环:用来循环遍历对象中的键值对的（continue和break同样适用）
// var obj = {
//     name : '城空',
//     age : 21,
//     friends : '宫羽,寒冰',
//     1 : 100,
//     2 : 200,
//     3 : 300
// }
// // for(var 变量(key) in 对象名)
// // 对象中有多少组键值对，循环就执行几次（除非break结束）
// for(var key in obj) {
//     // 每一次循环 key 变量存储的值: 当前对象的属性名
//     // 获取属性值: obj[属性名] => obj[key]     不可行: obj.key / obj['key']
//     console.log('属性名: ' + key + '属性值: ' + obj[key]);
// }
// // for in在遍历的时候，优先循环数字属性名（从小到大）




















